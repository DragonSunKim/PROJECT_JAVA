보통(O)
0 0 1 0 4 0 0 0 6
0 3 5 1 0 0 0 8 0
0 6 0 8 0 0 0 5 7
5 0 0 0 0 0 0 7 0
6 0 0 2 0 0 0 3 1
8 0 0 0 1 0 5 4 9
9 0 6 3 0 0 0 1 0
0 0 0 4 0 9 0 0 0
0 0 7 0 6 0 0 0 0

전문가(X)
0 0 0 0 0 0 7 5 2
0 0 0 4 9 0 0 8 0
0 0 0 0 6 0 0 9 0
7 0 0 5 0 0 8 0 0
0 0 0 2 0 0 0 0 0
5 2 0 0 0 9 0 0 0
0 0 8 0 0 0 0 0 7
0 0 4 0 3 1 0 0 0
0 9 0 0 0 0 1 0 0

어려움(X)
1 0 7 0 0 6 0 0 0
0 9 6 0 0 0 0 7 0
0 8 0 0 5 0 0 1 0
9 0 0 0 0 4 0 5 0
0 6 0 0 8 0 0 0 9
0 0 5 0 6 2 0 0 8
6 0 0 0 3 1 0 0 4
0 3 0 0 0 0 0 2 7
5 0 0 0 0 7 0 0 0

보통(X)
6 0 0 7 5 1 2 0 8
0 0 0 0 9 0 0 0 0
3 7 0 4 0 2 0 9 0
0 0 0 2 0 0 4 0 9
0 6 0 1 3 0 0 0 0
7 8 0 9 0 0 0 0 0
0 9 6 0 0 0 0 0 0
0 1 0 3 0 7 0 0 4
0 3 0 0 0 0 0 6 5

쉬움(X)
7 1 0 5 3 0 4 8 2
2 5 0 0 0 4 0 0 0
8 6 0 9 7 2 1 3 0
1 0 0 3 6 0 0 0 0
0 0 2 0 0 0 6 0 0
0 0 0 0 9 1 0 4 3
3 0 0 0 0 9 0 0 0
0 0 1 7 0 0 0 2 6
4 0 7 0 0 0 3 5 0

쉬움(X)
1 2 0 0 0 0 0 3 0
0 0 0 0 0 1 0 0 5
8 0 3 4 2 0 0 0 0
0 0 8 0 0 0 0 2 0
0 7 0 5 1 0 0 0 3
0 0 0 9 0 2 0 4 7
7 8 5 2 0 3 1 6 0
2 9 0 6 5 4 3 7 0
0 0 4 0 0 0 9 5 0

쉬움(O)
5 0 0 0 7 0 0 0 4
6 0 9 0 3 1 0 5 0
8 0 0 0 0 9 0 1 0
4 9 0 1 0 0 8 0 2
2 0 8 0 0 6 7 0 5
0 0 0 2 8 4 1 0 0
0 7 4 0 0 8 5 6 0
1 0 0 7 6 3 4 2 0
9 6 0 0 0 0 0 0 0
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {

                if (array[i][j].equals("0")) {
                    rule2 = new ArrayList<>(Arrays.asList(rule));

                    for (int m = 0; m < 9; m++) {
                        rule2.remove(array[i][m]);
                    }
                    for (int n = 0; n < 9; n++) {
                        rule2.remove(array[n][j]);
                    }

                    if (i >= 0 && i <= 2 && j >= 0 && j <= 2) {
                        x = 2;
                        y = 2;
                    } else if (i >= 0 && i <= 2 && j >= 3 && j <= 5) {
                        x = 2;
                        y = 5;
                    } else if (i >= 0 && i <= 2 && j >= 6 && j <= 8) {
                        x = 2;
                        y = 8;
                    }

                    else if (i >= 3 && i <= 5 && j >= 0 && j <= 2) {
                        x = 5;
                        y = 2;
                    } else if (i >= 3 && i <= 5 && j >= 3 && j <= 5) {
                        x = 5;
                        y = 5;
                    } else if (i >= 3 && i <= 5 && j >= 6 && j <= 8) {
                        x = 5;
                        y = 8;
                    }

                    else if (i >= 6 && i <= 8 && j >= 0 && j <= 2) {
                        x = 8;
                        y = 2;
                    } else if (i >= 6 && i <= 8 && j >= 3 && j <= 5) {
                        x = 8;
                        y = 5;
                    } else if (i >= 6 && i <= 8 && j >= 6 && j <= 8) {
                        x = 8;
                        y = 8;
                    }

                    for (int p = x - 2; p <= x; p++) {
                        for (int q = y - 2; q <= y; q++) {
                            rule2.remove(array[p][q]);
                        }
                    }

                    if (rule2.size() == 1)
                        array[i][j] = rule2.get(0);
                }
            }
        }